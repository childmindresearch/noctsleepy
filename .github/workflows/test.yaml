name: Python Tests

permissions:
  contents: read

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  unit:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.11, 3.12, 3.13]
        dependency-mode: [lowest-direct, highest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc
      with:
        enable-cache: true
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install the project
      run: uv sync --resolution=${{ matrix.dependency-mode }}
    - name: Run tests
      id: run-tests
      shell: bash
      run: |
        uv run pytest \
          --junitxml=pytest.xml \
          --cov-report=term-missing:skip-covered \
          --cov-report=xml:coverage.xml \
          --cov=src tests \
          --log-level=DEBUG \
          --verbose
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true


  ruff:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup venv
      uses: ./.github/actions/setup-venv
      with:
        only-dev: true
    - name: Ruff format
      run: uv run ruff format --check
    - name: Ruff check
      run: uv run ruff check

  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup venv
      uses: ./.github/actions/setup-venv
    - run: |
        uv run mypy .

  deptry:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup venv
      uses: ./.github/actions/setup-venv
    - run: |-
        uv run deptry ./src
